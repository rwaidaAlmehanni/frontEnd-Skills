import React, {Component} from 'react';
import {connect} from 'react-redux';

import Article from 'grommet/components/Article';
import Box from 'grommet/components/Box';
import Accordion from 'grommet/components/Accordion';
import AccordionPanel from 'grommet/components/AccordionPanel';
import NotificationEx1 from "../../components/NotificationEx1";
import Button from 'grommet/components/Button';
import Columns from 'grommet/components/Columns';
import Paragraph from 'grommet/components/Paragraph';

import MenuIcon from "grommet/components/icons/base/Menu";
import CloseIcon from "grommet/components/icons/base/Close";


class Notification extends Component {
  constructor(props) {
    super(props);
    this._notificationEx = this._notificationEx.bind(this)
    this._Code = this._Code.bind(this)
  }
  _notificationEx(){
    return(
      <Button plain={true} style={{backgroundColor: 'red',width:'30%',color:'black'}}>
        hi
      </Button>
    )
  }
  _Code(){
    return( "const styles = {\n" +
      "  div:{\n" +
      "    width:'30%',\n" +
      "    backgroundColor:'#FFD06E',\n" +
      "    padding:'1em',\n" +
      "    color:'#000',\n" +
      "    display:'flex',\n" +
      "    direction:'rtl',\n" +
      "    margin:'1em',\n" +
      "    textAlign:'center'\n" +
      "  },\n" +
      "  button:{\n" +
      "    marginRight:'2em',\n" +
      "    backgroundColor:'#000',\n" +
      "    color:'#FFD06E'\n" +
      "  }\n" +
      "\n" +
      "}\n" +
      "\n" +
      "export default class NotificationEx1 extends Component {\n" +
      "  constructor() {\n" +
      "    super();\n" +
      "    this._renderMenu = this._renderMenu.bind(this);\n" +
      "  }\n" +
      "\n" +
      "  _renderMenu() {\n" +
      "    if(!this.props.active) {\n" +
      "      return (\n" +
      "        <Button icon={<MenuIcon/>}/>\n" +
      "      );\n" +
      "    } else {\n" +
      "      return null;\n" +
      "    }\n" +
      "  }\n" +
      "\n" +
      "  render() {\n" +
      "    return (\n" +
      "      <div style={styles.div}>\n" +
      "        <b><p>لقد تم إرسال رسالة إلى بريدك الالكتروني يرجى تأكيد الحساب</p></b>\n" +
      "        <Button key=\"undo\" color=\"#fff\" size=\"medium\" style={styles.button}>\n" +
      "          <b>إعادة الإرسال</b>\n" +
      "        </Button>\n" +
      "        <CloseIcon style={{left:'10px'}}/>\n" +
      "      </div>\n" +
      "    );\n" +
      "  }\n" +
      "}"
    )
  }
  render() {
    return (
      <Box full={true} colorIndex={'light-2'}>
        <Article primary={true}>
          <h1 className={'center-align title-color'} >Notification</h1>
          <Box style={{padding:'1em'}}>
            <Columns maxCount={3} masonry={true} size={'large'} full={true} >
              <Box align='start' pad={{horizontal:'large'}}>
                <h3> UI/UX:</h3>
              </Box>
              <Box/>
              <Box align='end'>
                <Button  primary={true} label='Back' href='/'/>
              </Box>
            </Columns>
            <Box colorIndex={'light-1'} pad={'large'} margin={'large'}>
              <Paragraph>
                <b>*What are notifications ?</b><br/>
                Notification is an act of bringing something to the notice of the user.
                <br/><br/>
                <b>*Type of notifications : </b><br/>
                1-User generated notifications:<br/>
                It direct to user after an action user do it(like,send message)<br/>
                2-Context generated notifications:
                The application generated a notification based on permission of its users(calendar)<br/>
                3-System generated notifications:<br/>
                These are notifications generated by the app based on the needs of the app<br/>
                4-Notifications requiring action from the user.<br/>
                5-Passive notification(just display info to user)<br/><br/>
                <b>What makes a good notification?</b><br/>
                1-choose the great time to show it<br/>
                2-small in size (and have direct text that has user name if you can)<br/>
                3-location of displaying this message.<br/>
              </Paragraph>
            </Box>
            <Box margin={'large'}>
              <h3> Pure CSS:</h3>
              <Accordion style={{backgroundColor:'#fff'}}>
                <AccordionPanel  heading={<NotificationEx1/>} align={'center'}>
                  <Box margin={'large'}>
                    <Paragraph>
                      {this._Code().split('\n').map((c,i)=>{
                        return (<div>{c}</div>)
                      })}
                    </Paragraph>
                  </Box>
                </AccordionPanel>
              </Accordion>
            </Box>
            <Box margin={'large'}>
              <h3> Components:</h3>
              <Box colorIndex={'light-1'} pad={'large'}>
                <a href={'https://material-ui.com/demos/snackbars/'}><h3> Material UI Component</h3></a>
                <a href={'https://v1.grommet.io/docs/notification'}><h3> Grommet Component</h3></a>
              </Box>
            </Box>
          </Box>
        </Article>
      </Box>
    )}
}


const mapStateToProps = state => ({

});

const mapDispatchToProps = dispatch => ({


});

export default connect(mapStateToProps, mapDispatchToProps)(Notification);